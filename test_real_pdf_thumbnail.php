<?php
/**
 * ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á thumbnail ‡∏à‡∏≤‡∏Å‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á PDF ‡∏à‡∏£‡∏¥‡∏á
 */

require_once 'vendor/autoload.php';

function createRealPdfThumbnail($pdfPath, $outputPath)
{
    try {
        echo "Starting PDF thumbnail creation...\n";
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ Imagick extension
        if (!extension_loaded('imagick')) {
            echo "‚ùå Imagick extension not loaded\n";
            return false;
        }
        echo "‚úÖ Imagick extension is available\n";

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå PDF ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á
        if (!file_exists($pdfPath)) {
            echo "‚ùå PDF file not found: {$pdfPath}\n";
            return false;
        }
        echo "‚úÖ PDF file exists: {$pdfPath}\n";

        // ‡∏™‡∏£‡πâ‡∏≤‡∏á Imagick object
        $imagick = new Imagick();
        echo "‚úÖ Imagick object created\n";
        
        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå
        $imagick->setResolution(150, 150);
        echo "‚úÖ Resolution set to 150x150\n";
        
        // ‡∏≠‡πà‡∏≤‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á PDF ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
        $imagick->readImage($pdfPath . '[0]'); // [0] ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
        echo "‚úÖ PDF first page loaded\n";
        
        // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö JPEG
        $imagick->setImageFormat('jpeg');
        echo "‚úÖ Image format set to JPEG\n";
        
        // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏° (300x400 ‡∏û‡∏≠)
        $imagick->resizeImage(300, 400, Imagick::FILTER_LANCZOS, 1, true);
        echo "‚úÖ Image resized to 300x400\n";
        
        // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û
        $imagick->setImageCompressionQuality(90);
        echo "‚úÖ Compression quality set to 90\n";
        
        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö PDF ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™
        $imagick->setImageBackgroundColor(new ImagickPixel('white'));
        $imagick = $imagick->mergeImageLayers(Imagick::LAYERMETHOD_FLATTEN);
        echo "‚úÖ Background set to white and layers flattened\n";
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ü‡∏•‡πå
        $result = $imagick->writeImage($outputPath);
        echo "‚úÖ Attempting to write image to: {$outputPath}\n";
        
        // ‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥
        $imagick->clear();
        $imagick->destroy();
        
        if ($result && file_exists($outputPath)) {
            $filesize = filesize($outputPath);
            echo "‚úÖ SUCCESS: PDF thumbnail created successfully!\n";
            echo "   Output: {$outputPath}\n";
            echo "   Size: {$filesize} bytes\n";
            return true;
        } else {
            echo "‚ùå Failed to save PDF thumbnail: {$outputPath}\n";
            return false;
        }
        
    } catch (ImagickException $e) {
        echo "‚ùå ImagickException: " . $e->getMessage() . "\n";
        return false;
    } catch (Exception $e) {
        echo "‚ùå Exception: " . $e->getMessage() . "\n";
        return false;
    }
}

// Main execution
echo "=== PDF Thumbnail Generation Test ===\n\n";

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö
$testDir = __DIR__ . '/test_thumbnails';
if (!is_dir($testDir)) {
    mkdir($testDir, 0777, true);
    echo "‚úÖ Test directory created: {$testDir}\n";
}

// ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå PDF ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
$foundPdf = null;
$searchPaths = [
    __DIR__ . '/storage/app/public/labours',
    __DIR__ . '/public',
    __DIR__,
];

foreach ($searchPaths as $searchPath) {
    if (is_dir($searchPath)) {
        $iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($searchPath));
        foreach ($iterator as $file) {
            if ($file->isFile() && strtolower($file->getExtension()) === 'pdf') {
                $foundPdf = $file->getPathname();
                break 2;
            }
        }
    }
}

if ($foundPdf) {
    echo "‚úÖ Found existing PDF: {$foundPdf}\n";
    $testPdfPath = $foundPdf;
} else {
    echo "‚ùå No PDF file found for testing\n";
    echo "Please place a PDF file in the test directory and try again.\n";
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ content ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤
    $testPdfPath = $testDir . '/simple_test.pdf';
    $pdfContent = '%PDF-1.4
1 0 obj
<< /Type /Catalog /Pages 2 0 R >>
endobj
2 0 obj
<< /Type /Pages /Kids [3 0 R] /Count 1 >>
endobj
3 0 obj
<< /Type /Page /Parent 2 0 R /MediaBox [0 0 595 842] >>
endobj
xref
0 4
0000000000 65535 f 
0000000015 00000 n 
0000000060 00000 n 
0000000120 00000 n 
trailer
<< /Size 4 /Root 1 0 R >>
startxref
190
%%EOF';
    
    file_put_contents($testPdfPath, $pdfContent);
    echo "‚úÖ Created simple test PDF: {$testPdfPath}\n";
}

// ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á thumbnail
echo "\n--- Testing PDF Thumbnail Creation ---\n";
$thumbnailPath = $testDir . '/thumbnail.jpg';

$success = createRealPdfThumbnail($testPdfPath, $thumbnailPath);

if ($success) {
    echo "\nüéâ SUCCESS! PDF thumbnail has been created.\n";
    echo "üìÅ Thumbnail location: {$thumbnailPath}\n";
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå
    if (file_exists($thumbnailPath)) {
        $imageInfo = getimagesize($thumbnailPath);
        echo "üìè Thumbnail dimensions: {$imageInfo[0]}x{$imageInfo[1]}\n";
        echo "üìä File size: " . filesize($thumbnailPath) . " bytes\n";
        echo "üñºÔ∏è  MIME type: {$imageInfo['mime']}\n";
    }
} else {
    echo "\n‚ùå FAILED to create PDF thumbnail.\n";
    echo "Please check the error messages above.\n";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á
    echo "\n--- System Check ---\n";
    echo "PHP version: " . PHP_VERSION . "\n";
    echo "Imagick extension: " . (extension_loaded('imagick') ? '‚úÖ Loaded' : '‚ùå Not loaded') . "\n";
    
    if (extension_loaded('imagick')) {
        $imagick = new Imagick();
        $formats = $imagick->queryFormats();
        echo "Supported formats: " . (in_array('PDF', $formats) ? '‚úÖ PDF supported' : '‚ùå PDF not supported') . "\n";
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Ghostscript
        $version = Imagick::getVersion();
        echo "Imagick version: " . $version['versionString'] . "\n";
    }
}

echo "\n=== Test Complete ===\n";
